const boxesContainer = document.getElementById('boxes')
const btn = document.getElementById('btn')

btn.addEventListener('click', () => boxesContainer.classList.toggle('big'))

function createBoxes(){
  for (let i = 0; i < 4; i++) {
    for (let j = 0; j< 4; j++) {
      const box = document.createElement('div')
      box.classList.add('box')
      box.style.backgroundPosition = `${-j * 125}px ${-i * 125}px`
      boxesContainer.appendChild(box)
    }
  }
}

createBoxes()



//Sure! Here's an explanation of the JavaScript code:

const boxesContainer = document.getElementById('boxes'): 
//This line retrieves the HTML element with the ID of 'boxes' and 
assigns it to a constant variable named boxesContainer.

const btn = document.getElementById('btn'): 
//This line retrieves the HTML element with the ID of 'btn' and 
assigns it to a constant variable named btn.

btn.addEventListener('click', () => boxesContainer.classList.toggle('big')): 
//This line adds a click event listener to the btn element. When the button is clicked, it toggles the 'big' class on the boxesContainer element. The 'big' class is used in the CSS to increase the size of the container and its child elements.

function createBoxes(){...}: 
//This line declares a function named createBoxes which 
will be used to generate the individual boxes.

for (let i = 0; i < 4; i++) { for (let j = 0; j< 4; j++) {...}}: 
//These two nested for loops are used to create a grid of 16 boxes. 
The outer loop iterates four times and the inner loop iterates four times, 
so that 16 boxes are generated.

const box = document.createElement('div'): 
//This line creates a new HTML div element and assigns 
it to a constant variable named box.

box.classList.add('box'): This line adds the CSS class 'box' to the box element.

box.style.backgroundPosition = ${-j * 125}px ${-i * 125}px:: 
//This line sets the background position of the box element to a specific value 
based on the current iteration of the nested for loops. This ensures that 
each box has a unique background image.

boxesContainer.appendChild(box): 
//This line appends the box element to the boxesContainer element as a child.

createBoxes(): 
//This line calls the createBoxes function, which generates the initial grid of boxes.
